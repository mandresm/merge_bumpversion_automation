# ESM-Tools merge automation
# ==========================
# After a pull request is merged, the following steps are triggered:
#   1. Bumpversion on the release branch
#      - if the origin branch name contains "hotfix/" or "fix/" it does "bumpversion patch"
#      - if the origin branch name contains "feature/" or "feat/" it does "bumpversion minor"
#      - if the origin branch name contains none of the above runs "bumpversion patch" by default
#      - if "#patch", "#minor" or "#major" are included in any commit message of the PR, and none
#        of the above complies, then it uses the specified tag for the version bumping
#   2. Merges "release" into "develop".
#
# Note: the version bumping runs ONLY for pull-requests, pushes direcly on the release branch without
# pull-requests will not trigger version bumping.

name: merge automation

# Controls when the workflow will run
on:
  # Triggers the workflow on push release branch
  issue_comment:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  bump_and_merge2dev:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '#bump') }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      #- name: cherry pick last bump from release
      #  run: |
      #    git log -n 3 --grep="Bump version\:"
      #    git status;
      #    git log -n 1 -g --grep="Bump version\:" --pretty=format:"%h";
      #    ID_LAST_BUMP=$(git log -n 1 -g --grep="Bump version\:" --pretty=format:"%h");
      #    echo $ID_LAST_BUMP
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: set user
        run: |
          git config --global user.name "${GITHUB_ACTOR}";
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          
      - name: checkout PR origin branch
        run: |
          PR_URL="${{ github.event.issue.pull_request.url }}";
          PR_NUM=${PR_URL##*/}; echo "$PR_URL and $PR_NUM}"; 
          hub pr checkout $PR_NUM;
          git status
        env:
          DEFAULT_BRANCH: ${{ github.event.issue.pull_request.head_ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set current_branch var
        id: vars
        run: echo ::set-output name=current_branch::$(git rev-parse --abbrev-ref HEAD)
          
      - name: merge release into this branch
        run: |
          git status
          git merge release;
          
      - name: bump patch
        if: ${{
          contains(steps.vars.outputs.current_branch, 'fix/') &&
          !contains(steps.vars.outputs.current_branch, 'feat/') &&
          !contains(steps.vars.outputs.current_branch, 'feature/')
          }}
        uses: jaumann/github-bumpversion-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

      - name: bump feature
        if: ${{
          (
            contains(steps.vars.outputs.current_branch, 'feat/') ||
            contains(steps.vars.outputs.current_branch, 'feature/') 
          ) &&
          !contains(steps.vars.outputs.current_branch, 'fix/')
          }}
        uses: jaumann/github-bumpversion-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: minor
          
      - name: bump default
        if: ${{
          !contains(steps.vars.outputs.current_branch, 'feat/') &&
          !contains(steps.vars.outputs.current_branch, 'feature/') &&
          !contains(steps.vars.outputs.current_branch, 'fix/')
          }}
        uses: jaumann/github-bumpversion-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

#      - name: change author
#        run: |
#          git log -n 3;
#          echo $GITHUB_ACTOR
        
      - name: push changes
        run: |
          git push;
          git push --tags

#      - name: Push changes
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          tags: true

      - name: merge into develop
        run: |
          echo ${{ steps.vars.outputs.current_branch }};
          git checkout develop;
          git merge ${{ steps.vars.outputs.current_branch }};
          git push
